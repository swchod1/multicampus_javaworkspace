package com.homework180421prac;

import java.awt.*;

import java.io.*;

import javax.swing.*;

public class GaLoad extends JFrame {
	
	FileDialog fd = new FileDialog(this, "불러오기", FileDialog.LOAD);
	
	JTextArea jta = new JTextArea();
	JScrollPane jsp = new JScrollPane(jta);

	public GaLoad() {
		// TODO Auto-generated constructor stub
		
		super("내역");
		
		Container con = this.getContentPane();
		con.add(jsp);
		
		fd.setVisible(true);
		
		
		FileInputStream fis = null;
		InputStreamReader isr = null;
		BufferedReader br = null;
		
		if(fd.getFile() == null) {
			return;
		}
		
		try {
			fis = new FileInputStream(fd.getDirectory()+fd.getFile());
			isr = new InputStreamReader(fis);
			br = new BufferedReader(isr);
			
			String str = null;
			
			while ((str = br.readLine()) != null) {
				jta.append(str + "\n");
			}
			
		} catch (FileNotFoundException fe) {
			
			// TODO: handle exception
			fe.printStackTrace();
			
		} catch (IOException io) {
			
			io.printStackTrace();
			
		} finally {
			
			try {
				if (br != null) {
					br.close();
				}
				if (isr != null) {
					isr.close();
				}
				if (fis != null) {
					fis.close();
				}
			} catch (IOException io) {
				// TODO: handle exception
				io.printStackTrace();
			}
			
		}
		
		Dimension ds = Toolkit.getDefaultToolkit().getScreenSize();
		
		setSize(400, ds.height - 10);
		setLocation(ds.width-getWidth(), getHeight()-ds.height);
		setResizable(false);
		setVisible(true);
		jta.setEditable(false);
		
	}
	/*
	FileInputStream fis = null;
	InputStreamReader isr = null;
	BufferedReader br = null;
	
	try {
		fis = new FileInputStream("c:/hello.txt");
		isr = new InputStreamReader(fis);
		br = new BufferedReader(isr);
		
		// 한 라인씩 읽어 들인 문자열을 저장할 변수 선언
		String str = null;
		
		// readLine() 개행문자를 만나면 개행문자 이전까지의 문자열을 반환하고 스트림 끝에서 null을 반환함
		
		while ((str = br.readLine()) != null) {
			System.out.println(str);
		}
		
	} catch (FileNotFoundException fe) {
		
		// TODO: handle exception
		fe.printStackTrace();
		
	} catch (IOException io) {
		
		io.printStackTrace();
		
	} finally {
		
		try {
			if (br != null) {
				br.close();
			}
		} catch (IOException io) {
			// TODO: handle exception
			io.printStackTrace();
		}
		try {
			if (isr != null) {
				isr.close();
			}
		} catch (IOException io) {
			io.printStackTrace();
		}
		try {
			if (fis != null) {
				fis.close();
			}
		} catch (IOException io) {
			io.printStackTrace();
		}
	}
	*/
	
	
	
/*	
	FileReader reader = null;
	
	try {
		
		// 파일로 부터 한문자 단위로 읽어 올수 있는 reader 객체 생성
		reader = new FileReader("c:/song.txt");
		
		// 스티림을 토애 읽어 들인 유니코드 값을 저장할 변수
		
		int readValue = 0;
		
		while ((readValue = reader.read()) !=- 1) {
			System.out.println((char)(readValue));
		}
		
		
	} catch (FileNotFoundException fe) {
		// TODO: handle exception
		fe.printStackTrace();
	} catch (IOException io) {
		io.printStackTrace();
	} finally {

		try {
			if (reader != null) {
				reader.close();
			}
		} catch (IOException io) {
			// TODO: handle exception
			io.printStackTrace();
		}

	}
}

}*/

}
