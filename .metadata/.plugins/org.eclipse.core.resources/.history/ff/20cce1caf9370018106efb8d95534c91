package homework180404;

import java.util.*;

public class PanmaiImpl implements Panmai {
	
	private HashMap<String, ProductVO> map1 = new HashMap<String, ProductVO>();
	private HashMap<String, SaleVO> map2 = new HashMap<String, SaleVO>();
	private Scanner sc = new Scanner(System.in);
	
	@Override
	public void insertProduct() {
		// TODO Auto-generated method stub
		
		System.out.println("===상품등록===");
		
		String code;
		System.out.print("상품코드 : ");
		code = sc.next();
		
		if(map1.containsKey(code)) {
			System.out.println("이미 등록된 상품코드입니다.");
			return;
		}
		
		SaleVO sv = new SaleVO();
		ProductVO pv = new ProductVO();
		
		System.out.print("상품명 : ");
		pv.setPname(sc.next());
		System.out.print("단가 : ");
		pv.setPrice(sc.nextInt());
		System.out.print("수량 : ");
		pv.setQuantity(sc.nextInt());
		
		
		map1.put(code, pv);
		
		System.out.println("===등록완료===");
		
		
		
		
		
/*
		System.out.println("\n===자료추가===");
		
		// 학번을 기준으로 함.
		String hak;
		System.out.print("학번 : ");
		hak = sc.next();
		
		ScoreVO temp = readScore(hak); // 밑에 꺼
		
		if(temp != null) {
			System.out.println("등록된 학번 입니다.");
			return;
		}
		
		ScoreVO vo = new ScoreVO();
		vo.setHak(hak);
		
		// 기준 학번 정해짐
		
		// 기준 학번에 데이터 입력
		
		System.out.print("이름 : ");
		vo.setName(sc.next());
		System.out.print("생년월일 : ");
		vo.setBirth(sc.next());
		System.out.print("국어 : ");
		vo.setKor(sc.nextInt());
		System.out.print("영어 : ");
		vo.setEng(sc.nextInt());
		System.out.print("수학 : ");
		vo.setMat(sc.nextInt());
		
		
		// 입력한 데이터를 벡터에 추가
		list.add(vo); // ????
		System.out.println("===추가 완료===\n");
		*/
		
/*
		HashMap<String, Integer> map = new HashMap<String, Integer>();
		
		map.put("홍길동", new Integer(30)); // 객체형으로 들어감
		//map.put("홍길동", 30); // 자료형으로 들어감
		map.put("동길동", new Integer(100));
		map.put("서길동", new Integer(10));
		map.put("남길동", new Integer(80));
		map.put("북길동", new Integer(70));
		
        
		
		System.out.println(map);
		
	    
	     * 키와 값을 set 형태로 저장 (HashMap을 이용할 때 key와 value를 묶어주기 위해 entry를 이용함)
	     * Map.Entry 인터페이스
	     * 
	     * 맵의 엔트리는(키와 값의 한쌍(페어))이다.
	     * 
	     * Map.EntrySet 메소드는 이클래스에 속하는 요소를 가지는 맵의 컬렉션 뷰로 반환함
	     * 
	     * 맵의 엔트리의 참조를 취득하는 방법은 컬렉션 뷰의 반복자로 부터 취득함
	     * 
	     
		
		// 객체형으로 들어간 자료를 참조하는 방법
		Set<Map.Entry<String, Integer>> set1 = map.entrySet();
		
		Iterator<Map.Entry<String, Integer>> it1 = set1.iterator();
		
		while(it1.hasNext()) {
			Map.Entry<String, Integer> e = it1.next();
			System.out.println("이름 : " + e.getKey() + ", 점수 : " + e.getValue());
		}
		
		Set set2 = map.keySet();
		System.out.println("응시자 명단 : " + set2);
		
		
		// 값을 컬렉션을 이용하여 저장한다.
		Collection<Integer> v = map.values();
		Iterator<Integer> it2 = v.iterator();
		
		int sum = 0;
		
		while(it2.hasNext()) {
			Integer i = it2.next();
			sum += i;
		}
		
		System.out.println("총점 : " + sum);
		System.out.println("평균 : " + (float)sum/set2.size());
		System.out.println("최고점수 : " + Collections.max(v));
		System.out.println("최wj점수 : " + Collections.min(v));
		*/
		
		
		
		
		
	}

	public SaleVO checkCode(String code) {// 위에꺼 끌고와서 적용

		SaleVO sv = null;
		
		if(map2.containsKey(code)) {
			System.out.println("이미 등록된 상품코드입니다.");
		} 

		return sv; // 일치하는 정보를 찾으면 그 객체를 가지고 가고, 못찾으면 널값으로 나감

	}

	@Override
	public void insertQuantity() {
		// TODO Auto-generated method stub

	}

	@Override
	public void searchProduct() {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void listProduct() {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void insertSale() {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void searchSale() {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void listSale() {
		// TODO Auto-generated method stub
		
	}
	
	public void productMainDsp() {
		
		while (true) {
			
			int x;

			do {
				System.out.print("||1.상품등록||2.수량등록||3.상품리스트||4.상품코드검색||5.복귀|| > ");
				x = sc.nextInt();

			} while (x < 1 || x > 5);

			switch (x) {
			case 1:
				insertProduct();
				break;
			case 2:
				insertQuantity();
				break;
			case 3:
				listProduct();
				break;
			case 4 :
				searchProduct();
				break;
			case 5 :
				return;
				
			}

		}

	}

	public void saleMainDsp() {
		
while (true) {
			
			int x;

			do {
				System.out.print("||1.상품판매||2.판매현황리스트||3.판매현황검색||4.복귀|| > ");
				x = sc.nextInt();

			} while (x < 1 || x > 4);

			switch (x) {
			case 1:
				insertSale();
				break;
			case 2:
				listSale();
				break;
			case 3:
				searchSale();
				break;
			case 4 :
				return;
				
			}

		}
		

	}

}
