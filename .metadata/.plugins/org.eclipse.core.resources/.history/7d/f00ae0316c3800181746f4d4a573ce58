package homework180404;

import java.util.*;

public class PanmaiImpl implements Panmai {
	
	private HashMap<String, ProductVO> map1 = new HashMap<String, ProductVO>();
	private HashMap<String, SaleVO> map2 = new HashMap<String, SaleVO>();
	private Scanner sc = new Scanner(System.in);
	
	@Override
	public void insertProduct() {
		// TODO Auto-generated method stub
		
		System.out.println("===상품등록===");
		
		String code;
		System.out.print("상품코드 : ");
		code = sc.next();
		
		if(map1.containsKey(code)) {
			System.out.println("이미 등록된 상품코드입니다.");
			return;
		}
		
		ProductVO pv = new ProductVO();
		
		System.out.print("상품명 : ");
		pv.setPname(sc.next());
		System.out.print("단가 : ");
		pv.setPrice(sc.nextInt());
		System.out.print("수량 : ");
		pv.setQuantity(sc.nextInt());
		
		
		map1.put(code, pv);
		
		System.out.println("===등록완료===");
		
		
	}


	@Override
	public void insertQuantity() {
		// TODO Auto-generated method stub
		
		System.out.println("===수량등록===");
		System.out.print("상품코드 : ");
		String code = sc.next();
		System.out.println("현재수량 : " + map1.get(code).getQuantity());
		System.out.print("추가 수량 : ");
		int x = sc.nextInt();
		map1.get(code).setQuantity(map1.get(code).getQuantity()+x);
		
		

	}

	@Override
	public void searchProduct() {
		// TODO Auto-generated method stub

		System.out.println("===상품코드검색===");
		System.out.print("상품코드 : ");
		String code = sc.next();

		if (!map1.containsKey(code)) {
			System.out.println("등록된 상품코드가 아닙니다.");
			return;
		}

		System.out.println("코드 \t 상품명 \t 단가 \t 수량");

		System.out.println("--------------------------------------");

		System.out.println(code + " \t " + map1.get(code).getPname() + " \t " 
		+ map1.get(code).getPrice() + " \t " + map1.get(code).getQuantity());
	}

	@Override
	public void listProduct() {
		// TODO Auto-generated method stub

		System.out.println("===상품리스트===");

		Set<Map.Entry<String, ProductVO>> set = map1.entrySet();

		Iterator<Map.Entry<String, ProductVO>> it = set.iterator();
		
		System.out.println("코드 \t 상품명 \t 단가 \t 수량");
		
		System.out.println("--------------------------------------");
		
		while(it.hasNext()) {
			Map.Entry<String, ProductVO> me = it.next();
			System.out.println(me.getKey() + " \t " + me.getValue().getPname() +
					" \t " +	me.getValue().getPrice() + " \t " + me.getValue().getQuantity());
		}		
		
	}
	
	@Override
	public void insertSale() {
		// TODO Auto-generated method stub
		
		System.out.println("===상품판매===");
		
		String code;
		System.out.print("상품 코드 : ");
		code = sc.next();
		
		if(!map1.containsKey(code)) {
			System.out.println("등록된 상품코드가 아닙니다.");
			return;
		}
		
		SaleVO sv = new SaleVO();
		
		sv.setCode(code);
		
		System.out.print("고객명 : ");
		sv.setSname(sc.next());
		System.out.print("판매일 : ");
		sv.setCreated(sc.next());
		System.out.print("판매수량 : ");
		sv.setQuantity(sc.nextInt());
		
		
		
		
		map2.put(code, sv);
		map1.get(code).setQuantity(map1.get(code).getQuantity()-map2.get(code).getQuantity());
		
		
		System.out.println("===판매완료===");
		
		/*
		
        HashMap<String, Integer> map = new HashMap<String, Integer>();
		
		map.put("홍길동", new Integer(30)); // 객체형으로 들어감
		//map.put("홍길동", 30); // 자료형으로 들어감
		map.put("동길동", new Integer(100));
		map.put("서길동", new Integer(10));
		map.put("남길동", new Integer(80));
		map.put("북길동", new Integer(70));
		
        
		
		System.out.println(map);
		
	    
	     * 키와 값을 set 형태로 저장 (HashMap을 이용할 때 key와 value를 묶어주기 위해 entry를 이용함)
	     * Map.Entry 인터페이스
	     * 
	     * 맵의 엔트리는(키와 값의 한쌍(페어))이다.
	     * 
	     * Map.EntrySet 메소드는 이클래스에 속하는 요소를 가지는 맵의 컬렉션 뷰로 반환함
	     * 
	     * 맵의 엔트리의 참조를 취득하는 방법은 컬렉션 뷰의 반복자로 부터 취득함
	     * 
	     
		
		// 객체형으로 들어간 자료를 참조하는 방법
		Set<Map.Entry<String, Integer>> set1 = map.entrySet();
		
		Iterator<Map.Entry<String, Integer>> it1 = set1.iterator();
		
		while(it1.hasNext()) {
			Map.Entry<String, Integer> e = it1.next();
			System.out.println("이름 : " + e.getKey() + ", 점수 : " + e.getValue());
		}
		
		Set set2 = map.keySet();
		System.out.println("응시자 명단 : " + set2);
		
		
		// 값을 컬렉션을 이용하여 저장한다.
		Collection<Integer> v = map.values();
		Iterator<Integer> it2 = v.iterator();
		
		int sum = 0;
		
		while(it2.hasNext()) {
			Integer i = it2.next();
			sum += i;
		}
		
		System.out.println("총점 : " + sum);
		System.out.println("평균 : " + (float)sum/set2.size());
		System.out.println("최고점수 : " + Collections.max(v));
		System.out.println("최wj점수 : " + Collections.min(v));
		*/
		
		
		
		
	
		
		
	}
	
	@Override
	public void searchSale() {
		// TODO Auto-generated method stub
		
		System.out.println("===판매현황검색===");
		System.out.print("상품코드 : ");
		String code = sc.next();
		if(!map1.containsKey(code)) {
			System.out.println("등록된 상품코드가 아닙니다.");
			return;
		}
		if(!map2.containsKey(code)) { // or map2.get(code).getCode() != code
			System.out.println("판매된 상품코드가 아닙니다.");
			return;
		}
		
		System.out.println("코드 \t 금액 \t 상품명 \t 고객명 \t 판매일 \t 단가 \t 판매수량");

		System.out.println("--------------------------------------------------------------------");

		System.out.println(code + " \t " + map1.get(code).getPrice() + " \t " 
		+ map1.get(code).getPname() + " \t " + map2.get(code).getSname() + " \t "
		+ map2.get(code).getCreated() + " \t " + map1.get(code).getPrice() + " \t "
		+ map2.get(code).getQuantity());
		
	}
	
	@Override
	public void listSale() {
		// TODO Auto-generated method stub
		
		System.out.println("===판매리스트===");

		Set<Map.Entry<String, ProductVO>> set1 = map1.entrySet();

		Iterator<Map.Entry<String, ProductVO>> it1 = set1.iterator();
		
		Set<Map.Entry<String, SaleVO>> set2 = map2.entrySet();
		
		Iterator<Map.Entry<String, SaleVO>> it2 = set2.iterator();
		
		
		
		System.out.println("코드 \t 금액 \t 상품명 \t 고객명 \t 판매일 \t 단가 \t 판매수량");
		
		System.out.println("--------------------------------------------------------------------");
		
		while(it1.hasNext() && it2.hasNext()) {
			Map.Entry<String, ProductVO> me1 = it1.next();
			Map.Entry<String, SaleVO> me2 = it2.next();
			System.out.println(me1.getKey() + " \t " + me1.getValue().getPrice() +
					" \t " + me1.getValue().getPname() + " \t " + me2.getValue().getSname() +
					" \t " + me2.getValue().getCreated() + " \t " + me1.getValue().getPrice() + 
					" \t " + me2.getValue().getQuantity());
		}
		
		
	}
	
	public void productMainDsp() {
		
		while (true) {
			
			int x;

			do {
				System.out.print("||1.상품등록||2.수량등록||3.상품리스트||4.상품코드검색||5.복귀|| > ");
				x = sc.nextInt();

			} while (x < 1 || x > 5);

			switch (x) {
			case 1:
				insertProduct();
				break;
			case 2:
				insertQuantity();
				break;
			case 3:
				listProduct();
				break;
			case 4 :
				searchProduct();
				break;
			case 5 :
				return;
				
			}

		}

	}

	public void saleMainDsp() {
		
while (true) {
			
			int x;

			do {
				System.out.print("||1.상품판매||2.판매현황리스트||3.판매현황검색||4.복귀|| > ");
				x = sc.nextInt();

			} while (x < 1 || x > 4);

			switch (x) {
			case 1:
				insertSale();
				break;
			case 2:
				listSale();
				break;
			case 3:
				searchSale();
				break;
			case 4 :
				return;
				
			}

		}
		

	}

}
